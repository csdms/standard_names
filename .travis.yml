language: generic
os:
- linux
- osx
env:
  matrix:
  - CONDA_ENV=py36
  - CONDA_ENV=py37
  - CONDA_ENV=lint
matrix:
  exclude:
  - os: osx
    env: CONDA_ENV=lint
sudo: false
jobs:
  include:
  - stage: deploy
    if: tag =~ v.*$
    script: skip
    os: linux
    deploy:
      on:
        all_branches: true
      provider: pypi
      user: mcflugen
      password: 
        secure: dbebH+nSyyeqIBov9XDxl3IGGjQk5TSimW8tQKf5aC0W7xY6cexsya34ar/F0AmDWmpy7MlQHQSZkcVPVqHpObcLNW9m6cHXfaLyASG5TgcVOkqTgTtufrdqQb/q084e2Af3CLVn/iSicmntgsAiKt/QIhKpD9HE4qlbcExMNPo=
before_install:
- |
  if [[ $TRAVIS_OS_NAME == "osx" ]]; then
    brew remove --force $(brew list)
    brew cleanup -s
    rm -rf $(brew --cache)
  fi
install:
- |
  if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    curl https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh > $HOME/miniconda.sh
  else
    curl https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh > $HOME/miniconda.sh
  fi
- bash $HOME/miniconda.sh -b -p $HOME/anaconda
- export PATH="$HOME/anaconda/bin:$PATH"
- hash -r
- conda config --set always_yes yes --set changeps1 no
- |
  if [[ "$CONDA_ENV" == "docs" ]]; then
    conda env create -n test_env --file docs/environment.yml
  else
    conda env create -n test_env --file ci/requirements-$CONDA_ENV-$TRAVIS_OS_NAME.yml
  fi
- source activate test_env
- pip install . -r requirements.txt
script:
- |
  if [[ "$CONDA_ENV" == "lint" ]]; then
    make lint
  elif [[ "$CONDA_ENV" == "docs" ]]; then
    sphinx-apidoc --force -o docs/api model_metadata *tests
    make -C docs clean html
  else
    pytest --cov=model_metadata --cov-report=xml:$(pwd)/coverage.xml -vvv
  fi
after_success: coveralls
